module(
    name = "rain",
    repo_name = "com_nullcatalyst_rain",
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

################################
####       Utilities        ####
################################

#### Bazel Skylib ####

# https://registry.bazel.build/modules/bazel_skylib
bazel_dep(name = "bazel_skylib", version = "1.5.0")

#### WebAssembly ####

# https://github.com/nullcatalyst/wasmtoolchain_macos_arm64
bazel_dep(name = "wasm_toolchain", version = "0.0.1")
local_path_override(
    module_name = "wasm_toolchain",
    path = "../wasmtoolchain_macos_arm64",
)

# _WASM_TOOLCHAIN_COMMIT = "fb5eedccde3073c337bade259f22ea5d354736a0"
# archive_override(
#     module_name = "wasm_toolchain",
#     urls = [
#         "https://github.com/nullcatalyst/wasmtoolchain_macos_arm64/archive/{}.tar.gz".format(_WASM_TOOLCHAIN_COMMIT),
#     ],
#     integrity = "sha256-dToS5Ez7BMsYMEi8oYbt2iLcRVR+YsWPFKgK7Emq2kM=",
#     strip_prefix = "wasmtoolchain_macos_arm64-{}".format(_WASM_TOOLCHAIN_COMMIT),
# )

register_toolchains(
    "@wasm_toolchain//:toolchain",
)

################################
####       Libraries        ####
################################

#### Abseil ####

# https://registry.bazel.build/modules/abseil-cpp
bazel_dep(name = "abseil-cpp", version = "20240116.1")

#### Google Test ####

# https://registry.bazel.build/modules/googletest
bazel_dep(name = "googletest", version = "1.14.0")

#### Google Benchmark ####

# https://registry.bazel.build/modules/google_benchmark
bazel_dep(name = "google_benchmark", version = "1.8.3")

#### LLVM ####

# https://registry.bazel.build/modules/llvm-project
bazel_dep(name = "llvm-project", version = "17.0.3")

archive_override(
    module_name = "llvm-project",
    urls = [
        "https://github.com/llvm/llvm-project/releases/download/llvmorg-17.0.3/llvm-project-17.0.3.src.tar.xz",
    ],
    integrity = "sha256-vloeRNZPMGu0T859NuOzmTaU6OYSKyNIYIkGKDwXbbg=",
    strip_prefix = "llvm-project-17.0.3.src",
    patches = [
        "//third_party/llvm/patches:0001-Add-Bazel-files-to-.gitignore.patch",
        "//third_party/llvm/patches:0002-Add-LLVM-Bazel-overlay-files.patch",
        "//third_party/llvm/patches:0003-Add-MODULE.bazel.patch",
        "//third_party/llvm/patches:0004-Add-BUILD.bazel.patch",
        # "//third_party/llvm/patches:0005-Add-Bazel-LLVM-targets.patch",
        "//third_party/llvm/patches:0006-Add-LLVM-version-vars.patch",
        "//third_party/llvm/patches:0007-Guard-against-empty-workspace-root.patch",
        "//third_party/llvm/patches:0008-Correct-builtin-headers-prefix.patch",
        "//third_party/llvm/patches:0009-Fix-an-operator-overload-for-GCC-8.3.patch",
        "//third_party/llvm/patches:0010-Use-TEST_TMPDIR-on-Unix-when-it-is-set.patch",
        "//third_party/llvm/patches:0011-Use-Windows-assembly-files-for-BLAKE3-on-Windows.patch",
        "//third_party/llvm/patches:0012-Add-scope-resolution-operators-for-MSVC-2019.patch",
        "//third_party/llvm/patches:0013-Disable-zlib-zstd-mpfr-and-pfm.patch",

        # This is a copy of 0005-Add-Bazel-LLVM-targets.patch, but with all non-WebAssembly targets
        # commented out. This shrinks the size of the compiled clang binary from ~153MB to ~79MB.
        "//third_party/llvm/patches:1001-Add-Bazel-LLVM-targets.patch",
        # This removes the definition of the LLVM native target, since we are not including it in
        # the list of built targets.
        "//third_party/llvm/patches:1002-Replace-LLVM-native-target.patch",
        # Disable threads on WebAssembly, since they are not supported everywhere.
        "//third_party/llvm/patches:1003-Disable-threads-on-wasm.patch",

        # Add the ability to call additional functions from the interpreter.
        "//third_party/llvm/patches:2001-Add-interpreter-functions.patch",
        # We plan on only ever using the interpreter, so remove the check that would cause the JIT
        # engine to pre-emprively try to load the current executable's symbols, which happens before
        # the interpreter is even initialized.
        "//third_party/llvm/patches:2002-Remove-jit-dylib-check.patch",
    ],
    patch_strip = 1,
)

#### WebAssembly Binary Toolkit ####

# https://github.com/WebAssembly/wabt/releases/tag/1.0.34
http_archive(
    name = "wabt",
    urls = [
        "https://github.com/WebAssembly/wabt/archive/refs/tags/1.0.34.tar.gz",
    ],
    integrity = "sha256-DX2ooGYUHUohECxC/WsFm/7nwDIgw++pABvXgb8fQzA=",
    strip_prefix = "wabt-1.0.34",
    build_file = "@//third_party/wabt:wabt.BUILD",
)
