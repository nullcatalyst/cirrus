cc_library(
    name = "code",
    srcs = [
        "expr/all.hpp",
        "expr/any.cpp",
        "expr/any.hpp",
        "expr/array_or_slice_literal.cpp",
        "expr/binary_operator.cpp",
        "expr/block.cpp",
        "expr/boolean.cpp",
        "expr/call.cpp",
        "expr/cast.cpp",
        "expr/compile_time.cpp",
        "expr/element_pointer.cpp",
        "expr/export.cpp",
        "expr/extern.cpp",
        "expr/float.cpp",
        "expr/function.cpp",
        "expr/function_declaration.cpp",
        "expr/identifier.cpp",
        "expr/if.cpp",
        "expr/integer.cpp",
        "expr/let.cpp",
        "expr/member.cpp",
        "expr/module.cpp",
        "expr/parenthesis.cpp",
        "expr/struct_literal.cpp",
        "expr/unary_operator.cpp",
        "expr/while.cpp",
    ] + [
        "type/all.hpp",
        "type/array.cpp",
        "type/function.cpp",
        "type/interface.cpp",
        "type/optional.cpp",
        "type/reference.cpp",
        "type/slice.cpp",
        "type/struct.cpp",
        "type/type.cpp",
    ],
    visibility = [
        "//rain:__subpackages__",
    ],
    deps = [
        ":context",
        "//rain/lang:options",
        "//rain/lang/ast:hdrs",
        "//rain/lang/target/wasm",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/strings",
        "@abseil-cpp//absl/strings:str_format",
        "@llvm-project//llvm:CodeGen",
        "@llvm-project//llvm:ExecutionEngine",
        "@llvm-project//llvm:Interpreter",
        "@llvm-project//llvm:MC",
        "@llvm-project//llvm:common_transforms",
    ],
)

cc_library(
    name = "context",
    srcs = [
        "context.cpp",
        "module.cpp",
    ],
    hdrs = [
        "context.hpp",
        "module.hpp",
    ],
    visibility = [
        "//rain:__subpackages__",
    ],
    deps = [
        "//rain/lang:options",
        "//rain/lang/ast:hdrs",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/strings",
        "@abseil-cpp//absl/strings:str_format",
        "@llvm-project//llvm:CodeGen",
        "@llvm-project//llvm:ExecutionEngine",
        "@llvm-project//llvm:MC",
        "@llvm-project//llvm:common_transforms",
    ],
)
