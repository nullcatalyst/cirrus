load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

################################
####       Utilities        ####
################################

#### Skylib ####
# Skylib needs to be first, ahead of other dependencies that might try to include their own version
# This forces those dependencies to use the version that we supply instead
_SKYLIB_VERSION = "1.5.0"

http_archive(
    name = "bazel_skylib",
    sha256 = "118e313990135890ee4cc8504e32929844f9578804a1b2f571d69b1dd080cfb8",
    strip_prefix = "bazel-skylib-{version}".format(version = _SKYLIB_VERSION),
    url = "https://github.com/bazelbuild/bazel-skylib/archive/refs/tags/{version}.tar.gz".format(version = _SKYLIB_VERSION),
)

#### WebAssembly ####

# local_repository(
#     name = "com_nullcatalyst_wasmtoolchain",
#     path = "../wasmtoolchain",
# )
# # git_repository(
# #     name = "com_nullcatalyst_wasmtoolchain",
# #     branch = "main",
# #     remote = "https://github.com/nullcatalyst/wasmtoolchain.git",
# # )

# load("@com_nullcatalyst_wasmtoolchain//toolchain:toolchain.bzl", "wasm_toolchain")

# wasm_toolchain(name = "wasm_toolchain")

#### Emscripten ####

EMSCRIPTEN_VERSION = "3.1.52"

http_archive(
    name = "emsdk",
    sha256 = "865b26dd4c2b75657089d8c20fc7435f42117477ca3a3c183476b012fc73f2ab",
    strip_prefix = "emsdk-{version}/bazel".format(version = EMSCRIPTEN_VERSION),
    urls = ["https://github.com/emscripten-core/emsdk/archive/refs/tags/{version}.tar.gz".format(version = EMSCRIPTEN_VERSION)],
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")

emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")

emsdk_emscripten_deps()

################################
####       Libraries        ####
################################

#### Abseil ####

_ABSEIL_VERSION = "20230802.1"

http_archive(
    name = "com_google_absl",
    sha256 = "987ce98f02eefbaf930d6e38ab16aa05737234d7afbab2d5c4ea7adbe50c28ed",
    strip_prefix = "abseil-cpp-{version}".format(version = _ABSEIL_VERSION),
    url = "https://github.com/abseil/abseil-cpp/archive/refs/tags/{version}.tar.gz".format(version = _ABSEIL_VERSION),
)

#### RE2 ####

_RE2_VERSION = "2023-11-01"

http_archive(
    name = "com_googlesource_code_re2",
    # sha256 = "f89c61410a072e5cbcf8c27e3a778da7d6fd2f2b5b1445cd4f4508bee946ab0f",
    strip_prefix = "re2-{version}".format(version = _RE2_VERSION),
    url = "https://github.com/google/re2/archive/refs/tags/{version}.tar.gz".format(version = _RE2_VERSION),
)

#### Google Test ####

_GTEST_VERSION = "1.14.0"

http_archive(
    name = "com_google_googletest",
    sha256 = "8ad598c73ad796e0d8280b082cebd82a630d73e73cd3c70057938a6501bba5d7",
    strip_prefix = "googletest-{version}".format(version = _GTEST_VERSION),
    url = "https://github.com/google/googletest/archive/refs/tags/v{version}.tar.gz".format(version = _GTEST_VERSION),
)

_GBENCHMARK_VERSION = "1.8.3"

http_archive(
    name = "com_github_google_benchmark",
    sha256 = "6bc180a57d23d4d9515519f92b0c83d61b05b5bab188961f36ac7b06b0d9e9ce",
    strip_prefix = "benchmark-{version}".format(version = _GBENCHMARK_VERSION),
    url = "https://github.com/google/benchmark/archive/refs/tags/v{version}.tar.gz".format(version = _GBENCHMARK_VERSION),
)

load("@com_github_google_benchmark//:bazel/benchmark_deps.bzl", "benchmark_deps")

benchmark_deps()

#### LLVM ####
# LLVM_COMMIT = "f28c006a5895fc0e329fe15fead81e37457cb1d1"
# LLVM_VERSION = "17.0.6"

# http_archive(
#     name = "llvm-raw",
#     build_file_content = "# empty",
#     sha256 = "81494d32e6f12ea6f73d6d25424dbd2364646011bb8f7e345ca870750aa27de1",
#     strip_prefix = "llvm-project-llvmorg-{version}".format(version = LLVM_VERSION),
#     url = "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{version}.tar.gz".format(version = LLVM_VERSION),
# )

new_local_repository(
    name = "llvm-raw",
    build_file_content = "# empty",
    path = "../llvm-project",
)

load("@llvm-raw//utils/bazel:configure.bzl", "llvm_configure")

llvm_configure(
    name = "llvm-project",
    targets = [
        "WebAssembly",
    ],
)

maybe(
    http_archive,
    name = "llvm_zlib",
    build_file = "@llvm-raw//utils/bazel/third_party_build:zlib-ng.BUILD",
    sha256 = "e36bb346c00472a1f9ff2a0a4643e590a254be6379da7cddd9daeb9a7f296731",
    strip_prefix = "zlib-ng-2.0.7",
    urls = [
        "https://github.com/zlib-ng/zlib-ng/archive/refs/tags/2.0.7.zip",
    ],
)

maybe(
    http_archive,
    name = "llvm_zstd",
    build_file = "@llvm-raw//utils/bazel/third_party_build:zstd.BUILD",
    sha256 = "7c42d56fac126929a6a85dbc73ff1db2411d04f104fae9bdea51305663a83fd0",
    strip_prefix = "zstd-1.5.2",
    urls = [
        "https://github.com/facebook/zstd/releases/download/v1.5.2/zstd-1.5.2.tar.gz",
    ],
)
