const e=-1,t=1,n=2,o=3,a="color:#32a852;font-weight:bold;",r="color:#4287f5;font-weight:bold;",c="color:#eb4034;font-weight:bold;";async function s(s,m,u,p){const f=await async function(e,t){let n;const o=await WebAssembly.instantiateStreaming(fetch(e),{console:{log:(e,t)=>{console.log(l(n,e,t))},error:(e,t)=>{console.error(l(n,e,t))}},math:Math,time:{now_perf:()=>performance.now(),now_unix:()=>Date.now()},env:{callback:(e,o,a)=>{t?t(e,o,a):console.log(l(n,o,a))}}});return n=o.instance.exports.memory,o.instance.exports}("rainc.wasm",((d,b,g)=>{switch(d){case t:{const e=l(f.memory,b,g);console.log("%cCompiled LLVM IR:",r),console.log(e),s(e);break}case n:{const e=i(f.memory,b,g),t=new Uint8Array(e.byteLength);t.set(e),console.log("%cLinked WebAssembly binary:",r,t),m(t);break}case o:{const e=l(f.memory,b,g);console.log("%cCompiled WAT:",r),console.log(e),u(e),console.log("%cSuccess!",a);break}case e:{const e=l(f.memory,b,g);console.error("%cError:",c),console.error(e),p(e);break}}}));f.init();{const[e,t]=d(f.memory,f.malloc,"memory");f.set_memory_export(e,e+t),f.free(e)}return f.set_stack_size(0),function(e,t){monaco.editor.removeAllMarkers("compilation"),console.log("%cCompiling source code:",r),console.log(e);const[n,o]=d(f.memory,f.malloc,e);f.compile(n,n+o,t),f.free(n)}}function i(e,t,n){return new Uint8Array(e.buffer,t,n-t)}function l(e,t,n){return new TextDecoder("utf8").decode(i(e,t,n))}function d(e,t,n){const o=(new TextEncoder).encode(n),a=o.length,r=t(a);return new Uint8Array(e.buffer,r,a).set(new Uint8Array(o)),[r,a]}function m(e,t,n,o){e.languages.register({id:t}),e.languages.setMonarchTokensProvider(t,n),e.languages.setLanguageConfiguration(t,o)}async function u(){return require.config({paths:{vs:"https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.47.0/min/vs"}}),new Promise(((e,t)=>{require(["vs/editor/editor.main"],(async()=>{!function(e){m(e,"rain",{tokenizer:{root:[[/\b(await|break|continue|else|for|if|loop|return|while)\b/,"keyword"],[/\b(export|extern|fn|import|interface|let|struct|var|self)\b/,"keyword"],[/\/\/.*$/,"comment"],[/"(?:[^"\\]|\\.)*"/,"string"],[/\d+/,"number"],[/\d+.\d+/,"number"],[/[A-Za-z_][0-9A-Za-z_]*/,"identifier"],[/\s+/,"whitespace"]]}},{comments:{lineComment:"//"},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"[",close:"]"},{open:"{",close:"}"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]})}(monaco),function(e){m(e,"llvm-ir",{types:["void","half","float","double","x86_fp80","fp128","ppc_fp128","label","metadata","x86_mmx","type","label","opaque","token"],statements:["add","addrspacecast","alloca","and","arcp","ashr","atomicrmw","bitcast","br","catchpad","catchswitch","catchret","call","cleanuppad","cleanupret","cmpxchg","eq","exact","extractelement","extractvalue","fadd","fast","fcmp","fdiv","fence","fmul","fpext","fptosi","fptoui","fptrunc","free","frem","fsub","getelementptr","icmp","inbounds","indirectbr","insertelement","insertvalue","inttoptr","invoke","landingpad","load","lshr","malloc","max","min","mul","nand","ne","ninf","nnan","nsw","nsz","nuw","oeq","oge","ogt","ole","olt","one","or","ord","phi","ptrtoint","resume","ret","sdiv","select","sext","sge","sgt","shl","shufflevector","sitofp","sle","slt","srem","store","sub","switch","trunc","udiv","ueq","uge","ugt","uitofp","ule","ult","umax","umin","une","uno","unreachable","unwind","urem","va_arg","xchg","xor","zext"],keywords:["acq_rel","acquire","addrspace","alias","align","alignstack","alwaysinline","appending","argmemonly","arm_aapcscc","arm_aapcs_vfpcc","arm_apcscc","asm","atomic","available_externally","blockaddress","builtin","byval","c","catch","caller","cc","ccc","cleanup","coldcc","comdat","common","constant","datalayout","declare","default","define","deplibs","dereferenceable","distinct","dllexport","dllimport","dso_local","dso_preemptable","except","external","externally_initialized","extern_weak","fastcc","filter","from","gc","global","hhvmcc","hhvm_ccc","hidden","initialexec","inlinehint","inreg","inteldialect","intel_ocl_bicc","internal","linkonce","linkonce_odr","localdynamic","localexec","local_unnamed_addr","minsize","module","monotonic","msp430_intrcc","musttail","naked","nest","noalias","nobuiltin","nocapture","noimplicitfloat","noinline","nonlazybind","nonnull","norecurse","noredzone","noreturn","nounwind","optnone","optsize","personality","private","protected","ptx_device","ptx_kernel","readnone","readonly","release","returned","returns_twice","sanitize_address","sanitize_memory","sanitize_thread","section","seq_cst","sideeffect","signext","syncscope","source_filename","speculatable","spir_func","spir_kernel","sret","ssp","sspreq","sspstrong","strictfp","swiftcc","tail","target","thread_local","to","triple","unnamed_addr","unordered","uselistorder","uselistorder_bb","uwtable","volatile","weak","weak_odr","within","writeonly","x86_64_sysvcc","win64cc","x86_fastcallcc","x86_stdcallcc","x86_thiscallcc","zeroext"],escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[[/[,(){}<>[\]]/,"delimiters"],[/i\d+\**/,"type"],[/[%@!]\d+/,"variable.name"],[/-?\d+\.\d*(e[+-]\d+)?/,"number.float"],[/0[xX][0-9A-Fa-f]+/,"number.hex"],[/-?\d+/,"number"],[/\b(true|false)\b/,"keyword"],[/\b(zeroinitializer|undef|null|none)\b/,"constant"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string"],[/[-a-zA-Z$._][-a-zA-Z$._0-9]*(?:\([^:]+\))?:/,"tag"],[/[%@][-a-zA-Z$._][-a-zA-Z$._0-9]*/,"variable.name"],[/![-a-zA-Z$._][-a-zA-Z$._0-9]*(?=\s*)$/,"identifier"],[/![-a-zA-Z$._][-a-zA-Z$._0-9]*(?=\s*[=!])/,"identifier"],[/![A-Za-z]+(?=\s*\()/,"type"],[/\bDW_TAG_[a-z_]+\b/,"constant"],[/\bDW_ATE_[a-zA-Z_]+\b/,"constant"],[/\bDW_OP_[a-zA-Z0-9_]+\b/,"constant"],[/\bDW_LANG_[a-zA-Z0-9_]+\b/,"constant"],[/\bDW_VIRTUALITY_[a-z_]+\b/,"constant"],[/\bDIFlag[A-Za-z]+\b/,"constant"],[/;\s*PR\d*\s*$/,"comment.doc"],[/;\s*REQUIRES:.*$/,"comment.doc"],[/;\s*RUN:.*$/,"comment.doc"],[/;\s*CHECK:.*$/,"comment.doc"],[/;\s*CHECK-(?:NEXT|NOT|DAG|SAME|LABEL):.*$/,"comment.doc"],[/;\s*XFAIL:.*$/,"comment.doc"],[/;.*$/,"comment"],[/[*#=!]/,"operators"],[/[a-z_$][\w$]*/,{cases:{"@statements":"operators","@keywords":"keyword","@types":"type","@default":"identifier"}}],[/[ \t\r\n]+/,"white"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,"string","@pop"]]}},{comments:{lineComment:";"},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"[",close:"]"},{open:"{",close:"}"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]})}(monaco),function(e){m(e,"wat",{tokenizer:{root:[[/\;\;.*$/,"comment"],[/\(/,"delimiter.paren.open"],[/\)/,"delimiter.paren.close"],[/\b(module|export|func|memory|global|data|mut|imm)\b/,"keyword"],[/\b(i32|i64|f32|f64)\b/,"number.type"],[/"(?:[^"\\]|\\.)*"/,"string"],[/[a-zA-Z_][\w-]*/,"identifier"],[/\s+/,"white"]]}},{})}(monaco);const t=document.getElementById("source-code").textContent,n=monaco.editor.createModel(t,"rain"),o=monaco.editor.createModel("; Compile to see output here\n","llvm-ir"),a=monaco.editor.createModel(";; Compile to see output here\n","wat"),r=monaco.editor.create(document.getElementById("editor"),{model:n,automaticLayout:!0,wordWrap:"on",theme:window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"vs-dark":"vs"});window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",(e=>{r.updateOptions({theme:e.matches?"vs-dark":"vs"})})),e({monaco:monaco,editor:r,rain:n,llvmIr:o,wat:a})}))}))}!async function(){let e=null;const[t,n]=await Promise.all([u(),s((e=>{c.setValue(e)}),(t=>{e=t}),(e=>{i.setValue(e),g("success")}),(e=>{g("error");if(e.indexOf("<unknown>:")>=0){const t=e.split("\n"),[n,a,c,s]=(e=>{const t=e.split(":");return[t[0],Number(t[1]),Number(t[2]),t.slice(3).join(":").trim()]})(t[0]),i=t[2];let l=-1,d=i.length+1;for(let e=0;e<i.length;++e){const t=i[e];-1===l&&" "!==t?l=e:" "!==i[e-1]&&" "===t&&(d=e)}o.editor.setModelMarkers(r,"compilation",[{startLineNumber:a,startColumn:c,endLineNumber:a,endColumn:d,message:s,severity:o.MarkerSeverity.Error}])}}))]),{monaco:o,editor:a,rain:r,llvmIr:c,wat:i}=t,l=[r,c,i],d=[document.getElementById("rain-tab"),document.getElementById("llvm-ir-tab"),document.getElementById("wat-tab")],m=document.getElementById("compile"),p=document.getElementById("download"),f=document.getElementById("download-size"),b=document.getElementById("optimize");function g(e){m.classList.remove("success"),m.classList.remove("error"),m.classList.add(e),setTimeout((()=>{m.addEventListener("transitionend",(()=>{m.classList.remove("transition")}),{once:!0}),m.classList.add("transition"),requestAnimationFrame((()=>m.classList.remove(e)))}),2e3)}d.forEach(((e,t)=>{e.addEventListener("click",(()=>{d.forEach((e=>e.classList.remove("active"))),e.classList.add("active"),a.setModel(l[t]),a.updateOptions({readOnly:0!==t})}))})),m.addEventListener("click",(()=>{var t;n(r.getValue(),b.checked),null!==e?(p.classList.remove("disabled"),f.innerText=`(${t=e.length,t>1048576?`${(t/1048576).toFixed(2)} MiB`:t>1024?`${(t/1024).toFixed(2)} KiB`:`${t} bytes`})`):p.classList.add("disabled")})),p.addEventListener("click",(()=>{null!==e&&function(e,t,n){const o=new Blob([t],{type:n}),a=URL.createObjectURL(o),r=document.createElement("a");r.href=a,r.download=e,r.click()}("out.wasm",e,"application/wasm")}))}();